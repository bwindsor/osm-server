#task install unzip once
    provisio install yum unzip
#end

#task clone_this_repo once
    provisio download https://github.com/bwindsor/osm-server/archive/master.zip
    rm -fr osm-server-master
    unzip -o /tmp/master.zip -d .
#end

#task install_docker once
    provisio install yum yum-utils
    provisio install yum device-mapper-persistent-data
    provisio install yum lvm2
    provisio download https://download.docker.com/linux/centos/docker-ce.repo
    sudo yum-config-manager --add-repo /tmp/docker-ce.repo
    provisio install yum docker-ce
    sudo systemctl enable docker
    sudo systemctl start docker
#end

#task install_docker_compose once
    provisio install yum curl
    provisio download https://github.com/docker/compose/releases/download/1.19.0-rc1/docker-compose-`uname -s`-`uname -m`
    sudo mv /tmp/docker-compose-`uname -s`-`uname -m` /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
#end

#task pull_docker_images once
    provisio install docker chatelao/docker-postgres-osm
    provisio install docker smartroadsense/osm-tiles
    provisio install docker openfirmware/osm2pgsql
    provisio install docker bwindsor/osm-pbf-merger:v1.0
#end

#task open_port_80 once
    firewall-cmd --zone=public --add-port=80/tcp --permanent
    firewall-cmd --reload
#end

#task download_map_data always if UPDATING_MAP
    mkdir -p /tmp/map-data
    provisio download http://download.geofabrik.de/europe/ireland-and-northern-ireland-180125.osm.pbf
    mv /tmp/ireland-and-northern-ireland-180125.osm.pbf /tmp/map-data
    provisio download http://download.geofabrik.de/europe/great-britain-180125.osm.pbf
    mv /tmp/great-britain-180125.osm.pbf /tmp/map-data
#end

#task merge_map_data always if UPDATING_MAP
    docker run -it --rm -v /tmp/map-data:/data bwindsor/osm-pbf-merger:v1.0 ireland-and-northern-ireland-180125.osm.pbf great-britain-180125.osm.pbf -o merged.osm.pbf
#end

#task initialise_tile_server always
    cd osm-server-master
    chmod +x initialise_tile_server
    ./initialise_tile_server
    cd ..
#end

#task import_map_data always if UPDATING_MAP
    export IMPORT_FROM=/tmp/map-data
    export IMPORT_FILE=merged.osm.pbf
    cd osm-server-master
    docker-compose -f docker-compose-importer.yml run --rm data-importer
    cd ..
    sleep 1s
#end

#task restart_tile_server always
    cd osm-server-master
    docker-compose restart
    cd ..
#end

#task clear_cached_tiles always if UPDATING_MAP
    TILE_CONTAINER_ID=$(docker ps | grep tile-server | awk '{print $1;}')
    docker exec -it $TILE_CONTAINER_ID rm -r /var/lib/mod_tile/default
#end

#task prerender_tiles always
    # Note this task does nothing if prerendering has already been done, it doesn't matter that we are rerunning it
    TILE_CONTAINER_ID=$(docker ps | grep tile-server | awk '{print $1;}')
    docker exec -it $TILE_CONTAINER_ID render_list_geo -z 0 -Z 15 -x -8 -X 1.8 -y 49.8 -Y 60.9`
#end


